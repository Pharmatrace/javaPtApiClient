/*
 * PharmaTrace Supply Chain Information Network API
 * The PharmaTrace SCIN API provides network members a resource and process oriented access to the blockchain backed market and inventory information. It represents a layer of abstraction above the Hyperledger network to facilitate a business focused development of clients and integration systems without the need to directly connect to Hyperledger nodes.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: api@pharmatrace.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.pharmatrace.api.scin.pub.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Pharmaceutical
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2018-11-10T20:07:55.800+01:00[Europe/Berlin]")
public class Pharmaceutical {
  public static final String SERIALIZED_NAME_PHARMACEUTICAL_ID = "pharmaceutical_id";
  @SerializedName(SERIALIZED_NAME_PHARMACEUTICAL_ID)
  private String pharmaceuticalId;

  public static final String SERIALIZED_NAME_GTIN = "gtin";
  @SerializedName(SERIALIZED_NAME_GTIN)
  private String gtin;

  public static final String SERIALIZED_NAME_TRADE_NAME = "trade_name";
  @SerializedName(SERIALIZED_NAME_TRADE_NAME)
  private String tradeName;

  public static final String SERIALIZED_NAME_EAN_CODE = "ean_code";
  @SerializedName(SERIALIZED_NAME_EAN_CODE)
  private String eanCode;

  public static final String SERIALIZED_NAME_MANUFACTURER_ID = "manufacturer_id";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER_ID)
  private String manufacturerId;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public Pharmaceutical pharmaceuticalId(String pharmaceuticalId) {
    this.pharmaceuticalId = pharmaceuticalId;
    return this;
  }

   /**
   * Either gtin or synthetical for precision medicine.
   * @return pharmaceuticalId
  **/
  @ApiModelProperty(value = "Either gtin or synthetical for precision medicine.")
  public String getPharmaceuticalId() {
    return pharmaceuticalId;
  }

  public void setPharmaceuticalId(String pharmaceuticalId) {
    this.pharmaceuticalId = pharmaceuticalId;
  }

  public Pharmaceutical gtin(String gtin) {
    this.gtin = gtin;
    return this;
  }

   /**
   * Global trade item number (GS1)
   * @return gtin
  **/
  @ApiModelProperty(value = "Global trade item number (GS1)")
  public String getGtin() {
    return gtin;
  }

  public void setGtin(String gtin) {
    this.gtin = gtin;
  }

  public Pharmaceutical tradeName(String tradeName) {
    this.tradeName = tradeName;
    return this;
  }

   /**
   * Manufacturers official name of the pharmaceutical product.
   * @return tradeName
  **/
  @ApiModelProperty(value = "Manufacturers official name of the pharmaceutical product.")
  public String getTradeName() {
    return tradeName;
  }

  public void setTradeName(String tradeName) {
    this.tradeName = tradeName;
  }

  public Pharmaceutical eanCode(String eanCode) {
    this.eanCode = eanCode;
    return this;
  }

   /**
   * EAN code.
   * @return eanCode
  **/
  @ApiModelProperty(value = "EAN code.")
  public String getEanCode() {
    return eanCode;
  }

  public void setEanCode(String eanCode) {
    this.eanCode = eanCode;
  }

  public Pharmaceutical manufacturerId(String manufacturerId) {
    this.manufacturerId = manufacturerId;
    return this;
  }

   /**
   * Manufaturer id
   * @return manufacturerId
  **/
  @ApiModelProperty(value = "Manufaturer id")
  public String getManufacturerId() {
    return manufacturerId;
  }

  public void setManufacturerId(String manufacturerId) {
    this.manufacturerId = manufacturerId;
  }

  public Pharmaceutical image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Image URL representing the product.
   * @return image
  **/
  @ApiModelProperty(value = "Image URL representing the product.")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Pharmaceutical pharmaceutical = (Pharmaceutical) o;
    return Objects.equals(this.pharmaceuticalId, pharmaceutical.pharmaceuticalId) &&
        Objects.equals(this.gtin, pharmaceutical.gtin) &&
        Objects.equals(this.tradeName, pharmaceutical.tradeName) &&
        Objects.equals(this.eanCode, pharmaceutical.eanCode) &&
        Objects.equals(this.manufacturerId, pharmaceutical.manufacturerId) &&
        Objects.equals(this.image, pharmaceutical.image);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pharmaceuticalId, gtin, tradeName, eanCode, manufacturerId, image);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Pharmaceutical {\n");
    
    sb.append("    pharmaceuticalId: ").append(toIndentedString(pharmaceuticalId)).append("\n");
    sb.append("    gtin: ").append(toIndentedString(gtin)).append("\n");
    sb.append("    tradeName: ").append(toIndentedString(tradeName)).append("\n");
    sb.append("    eanCode: ").append(toIndentedString(eanCode)).append("\n");
    sb.append("    manufacturerId: ").append(toIndentedString(manufacturerId)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

